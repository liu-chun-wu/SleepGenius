services:
  backend:
    container_name: garmin-backend
    build: ./backend
    ports:
      - "8000:8000"
    restart: always
    volumes:
      - ./nginx_logs:/var/log/nginx
    env_file:
      - .env
    networks:
      - SleepGenius-network
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
        tag: backend.log
    depends_on:
      elasticsearch:
        condition: service_healthy
      fluentd:
        condition: service_started
      kibana:
        condition: service_healthy

  frontend:
    container_name: garmin-frontend
    build: ./frontend/garmin-sleep-frontend
    ports:
      - "8080:8080"
    restart: always
    depends_on:
      backend:
        condition: service_started
    volumes:
      - static_volume:/usr/share/nginx/html/static
      - ./nginx_logs:/var/log/nginx
    networks:
      - SleepGenius-network
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
        tag: frontend.log

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - ES_TMPDIR=/usr/share/elasticsearch/tmp  # ✅ 新增：指定暫存路徑
    restart: always
    mem_limit: 2g
    ports:
      - "9200:9200"
    networks:
      - SleepGenius-network
    volumes:
      - esdata:/usr/share/elasticsearch/data
      - estmp:/usr/share/elasticsearch/tmp
    command: >
      bash -c "mkdir -p /usr/share/elasticsearch/tmp &&
               chown -R 1000:0 /usr/share/elasticsearch/tmp &&
               exec /usr/local/bin/docker-entrypoint.sh"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.0
    container_name: kibana
    restart: always
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - SERVER_PUBLICBASEURL=http://localhost:5601
    networks:
      - SleepGenius-network
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5601/api/status"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  fluentd:
    build: ./fluentd
    container_name: fluentd
    restart: always
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    volumes:
      - ./fluentd/fluent.conf:/fluentd/etc/fluent.conf
      - ./nginx_logs:/fluentd/nginxlog
    networks:
      - SleepGenius-network
    depends_on:
      elasticsearch:
        condition: service_healthy

  # cleaner:
  #   image: alpine:latest
  #   container_name: cleaner
  #   volumes:
  #     - ./scripts:/scripts
  #   entrypoint: ["/bin/sh", "-c", "apk add --no-cache curl bash && while true; do /scripts/es_cleanup.sh; sleep 172800; done"]
  #   depends_on:
  #     elasticsearch:
  #       condition: service_healthy
  #   networks:
  #     - plagiarism-detector-network
volumes:
  static_volume:
  esdata:
  estmp:

networks:
  SleepGenius-network:
